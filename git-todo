#!/usr/bin/env bash


function main() {
	local opt_show_colors=""
	local opt_show_list=""
	local opt_sort_key=2
	declare -a args
	while [ $# -gt 0 ]; do
		case "$1" in
		-h|--help)
			show_usage "$(basename "$0")"
			return 0
			;;
		-l|--list)
			opt_show_list=1
			shift
			;;
		-s|--sort)
			shift
			opt_sort_key="$1"
			shift
			;;
		--colors)
			shift
			opt_show_colors="yes"
			;;
		--no-colors)
			shift
			opt_show_colors="no"
			;;
		--)
			shift
			break
			;;
		-*)
			show_usage "$(basename "$0")"
			return 1
			;;
		*)
			args+=( "$1" )
			shift
			;;
		esac
	done
	set -- "${args[@]}" "$@"
	unset args

	if [ -z "$opt_show_colors" ]; then
		if git config --get-colorbool todo; then
			opt_show_colors="yes"
		else
			opt_show_colors="no";
		fi
	fi

	if [ $# -gt 2 ]; then
		show_usage "$(basename "$0")"
		return 1
	fi

	local tag_or_prefix="$1"
	shift

	if [ "$opt_show_colors" == "yes" ]; then
		local viewer=display_table
		local style_loc='\x1b[34m'
		local style_tag='\x1b[36m'
		local style_txt='\x1b[37m'
	else
		local viewer=cat
		local style_loc=''
		local style_tag=''
		local style_txt=''
	fi

	if [ "$opt_show_list" ]; then
		get_file_list "$@" | cat_lines | \
			filter_todo_lines "$tag_or_prefix" | \
			sed -e 's/^[^'$'\t'']*'$'\t''\([^'$'\t'']*\)'$'\t''[^'$'\t'']*$/\1/' | \
			sort -u
	else
		get_file_list "$@" | cat_lines | \
			filter_todo_lines "$tag_or_prefix" "$style_loc" "$style_tag" "$style_txt" | \
			sort -t $'\t' -k "$opt_sort_key" | \
			$viewer
	fi
}


function show_usage() {
	echo "USAGE: $1 [(<todo_tag>:|<todo_tag_prefix>) [search_path]...]"
}


function get_file_list() {
	git ls-files -z -- "$@"
}


function cat_lines() {
	xargs -0 awk '{printf "%s:%d\t%s\n", FILENAME, FNR, $0}'
}


function filter_todo_lines() {
	local todo_tag=${1:+:$1}
	local style_loc="$2"
	local style_tag="$3"
	local style_txt="$4"
	if [ -n "$style_loc" -o -n "$style_tag" -o -n "$style_txt" ]; then
		local style_reset='\x1b[0m'
	else
		local style_reset=''
	fi

	if [ "${todo_tag}" == "${todo_tag%:}" ]; then
		rest_of_the_tag='\(:[:a-zA-Z0-9_]*\)\?'
	else
		rest_of_the_tag='\(:*\)'
	fi
	while [ "${todo_tag}" != "${todo_tag%:}" ]; do
		todo_tag="${todo_tag%:}"
	done

	local replacement="$style_loc"'\1'"$style_reset"'\t'"$style_tag"'\2'"$style_reset"'\t'"$style_txt"'\4'"$style_reset"
	gsed -n 's/^\([^:]*:[0-9]\+\).*\?\(TODO'"$todo_tag""$rest_of_the_tag"'\)\([[:space:]]\+\(.*\)\)\?/'"$replacement"'/p'
}


function display_table() {
	case "$(uname -s)" in
		"Darwin")
			column -t -s $'\t'
			;;
		*)
			expand -t 60,110
	esac
}


main "$@"
