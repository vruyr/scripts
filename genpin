#!/usr/bin/env python

import random, argparse


def main(argv=None):
	opts = _parse_args(argv)

	pins = [genpin(opts.length) for i in range(opts.number)]
	per_line = (opts.width + 1) // (opts.length + 1)

	while pins:
		print(" ".join(pins[:per_line]))
		pins = pins[per_line:]


def genpin(length):
	for i in range(random.randint(1, 5)):
		pin = "".join([str(random.randint(0, 9)) for i in range(length)])
	return pin


def _parse_args(argv=None):
	parser = argparse.ArgumentParser(prog=(argv[0] if argv is not None else None))
	parser.add_argument("--number", "-n", action="store", type=int, metavar="N", default=200, help="how many pins to generate")
	parser.add_argument("--length", "-l", action="store", type=int, metavar="N", default=6, help="how many digits in each pin")
	parser.add_argument("--width", "-w", action="store", type=int, metavar="N", default=None, help="print no more than specified chars per line")
	opts = parser.parse_args(argv[1:] if argv is not None else None)
	if opts.width is None:
		opts.width = opts.length * 10 + 9
	return opts


if __name__ == '__main__':
	main()
